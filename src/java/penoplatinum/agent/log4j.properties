# root logger logs everything to file
log4j.rootLogger=INFO, file
# specific loggers log their parts of the correct tables in the database
log4j.model=INFO, model
log4j.walls=INFO, walls
log4j.values=INFO, values
log4j.agents=INFO, agents

# FILE

# boilerplate appender setup
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.MaxFileSize=10MB
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n
# custom configuration
log4j.appender.file.File=/tmp/robot.log

# DATABASE

# boilerplate appender setup
log4j.appender.model=org.apache.log4j.jdbc.JDBCAppender
log4j.appender.model.driver=com.mysql.jdbc.Driver
log4j.appender.model.layout=org.apache.log4j.PatternLayout
log4j.appender.model.sql=INSERT INTO model ( robot, lightValue, lightColor, barcode, sonarAngle, sonarDistance, pushLeft, pushRight, event, source, plan, queue, action, argument ) VALUES ( %m );
# custom configuration
log4j.appender.model.URL=jdbc:mysql://localhost/robots
log4j.appender.model.user=platinum
log4j.appender.model.password=platinum

# boilerplate appender setup
log4j.appender.walls=org.apache.log4j.jdbc.JDBCAppender
log4j.appender.walls.driver=com.mysql.jdbc.Driver
log4j.appender.walls.layout=org.apache.log4j.PatternLayout
log4j.appender.walls.sql=INSERT INTO model ( robot, lightValue, lightColor, barcode, sonarAngle, sonarDistance, pushLeft, pushRight, event, source, plan, queue, action, argument ) VALUES ( %m );
# custom configuration
log4j.appender.walls.URL=jdbc:mysql://localhost/robots
log4j.appender.walls.user=platinum
log4j.appender.walls.password=platinum
